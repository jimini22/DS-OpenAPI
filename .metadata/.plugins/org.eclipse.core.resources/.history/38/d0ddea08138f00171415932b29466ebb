package com.wooribank.wbt3.common.i18n.service.impl;

import java.util.List;

import javax.annotation.PostConstruct;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.Cache;
import org.springframework.cache.CacheManager;
//import org.springframework.cache.annotation.Cacheable;

import com.wooribank.wbt3.common.i18n.mapper.I18nMessageMapper;
import com.wooribank.wbt3.common.i18n.model.I18nMessage;
import com.wooribank.wbt3.common.i18n.model.ListVo;
import com.wooribank.wbt3.common.i18n.service.I18nService;
import com.wooribank.wbt3.common.i18n.support.MessageSource;


public class I18nRDBResourceServiceImpl implements I18nService, MessageSource {
	//private final Log log = LogFactory.getLog(this.getClass());
	
	@Autowired
	private I18nMessageMapper i18nMessageMapper;

	@Autowired
	private CacheManager cacheManager;
	
	
	@PostConstruct
	public void initializeCache(){
	    /*
	    Cache cache = cacheManager.getCache("i18nMessageCache");
	    
	    List<I18nMessage> list = i18nMessageMapper.selectAll();
	    for (int i = 0; i < list.size(); i ++){
	    	I18nMessage i18nMessage = list.get(i);
	    	cache.put(i18nMessage.getCode() + "_" + i18nMessage.getLanguage(), i18nMessage);	
	    }
	    */
	}
	
	/**
	 * Message Source
	 */

	public String getMessage(String code, String locale) {
		log.debug(">>> execure getMessage ...");
		
		I18nMessage i18nMessage = inquireMessage(code, locale);
		if (i18nMessage == null) {
			return null;
		}

		return i18nMessage.getMessage();
	}
	

	//@Cacheable(value = "i18nMessageCache", key="#code.concat('_').concat(#language)")
	//@Cacheable(value = "i18nMessageCache")
	public I18nMessage inquireMessage(String code, String language) {
		log.debug(">>> execure inquireMessage ...i18nMessageCache...");
		I18nMessage i18nMessage = null;
		
		String cacheKey = code + "_" + language;
		
		Cache cache = cacheManager.getCache("i18nMessageCache");
		i18nMessage = cache.get(cacheKey, I18nMessage.class);
		
		if(i18nMessage == null){		
			i18nMessage = i18nMessageMapper.selectById(code, language);
		}
		
		if (i18nMessage == null) {
			return null;
		}

		return i18nMessage;
	}


	public ListVo<I18nMessage> inquireAllMessageList() {
		log.debug(">>> execure inquireAllMessageList ...");
		
		List<I18nMessage> list = i18nMessageMapper.selectAll();
		long total = list.size();

		return new ListVo<I18nMessage>(list, total);
	}

}

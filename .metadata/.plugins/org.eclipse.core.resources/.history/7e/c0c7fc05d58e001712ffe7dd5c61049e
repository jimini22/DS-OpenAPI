/*
 * Copyright (c) 2013 Bluedigm.
 * All right reserved.
 *
 * This software is the confidential and proprietary information of Bluedigm.
 * You shall not disclose such Confidential Information and
 * shall use it only in accordance with the terms of the license agreement
 * you entered into with Bluedigm.
 */
package com.bluedigm.web.base.framework.core;

import javax.servlet.ServletContext;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.web.context.ServletContextAware;
import org.springframework.web.context.support.WebApplicationContextUtils;


/**
 * <pre>
 * com.wooribank.wbt3.web.base.framework.core
 *    |_ ApplicationContextFactory.java
 * This class should be used by non-spring-wired classes if they need
 * access to the application context
 * </pre>
 * 
 * @author Han-Woong Lee, Bluedigm
 * @date 2012. 4. 6. 오후 2:55:58
 * @version 0.0.1
 */
public class ApplicationContextFactory implements ServletContextAware {
	protected static Logger log = LoggerFactory.getLogger(ApplicationContextFactory.class);

	private static Object initObj = null;

	private static int count = 0;

	private static ApplicationContext context;

	public static void init(Object o) {
		if (count > 0) {
			log.error("Can't initialize the application context twice: THIS SHOULD ONLY HAPPEN DURING TESTING");
		}
		initObj = o;
		count++;
	}

	public static ApplicationContext getApplicationContext() {
		if (initObj == null) {
			throw new IllegalStateException("Application context not initialized");
		} else if (initObj instanceof ServletContext) {
			ServletContext servletContext = (ServletContext) initObj;
			return WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext);

		} else if (initObj instanceof String) {
			if (context == null) {
				String contextResourceLocation = (String) initObj;
				context = new ClassPathXmlApplicationContext(contextResourceLocation);
			}
			return context;
		} else {
			throw new IllegalStateException("You must initialize the context with a String");
		}
	}

	/*
	 * (non-Javadoc)
	 * @see org.springframework.web.context.ServletContextAwar
	 * e#setServletContext(javax.servlet.ServletContext)
	 */
	public void setServletContext(ServletContext context) {
		init(context);
	}
}
